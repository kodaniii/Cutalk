syntax = "proto3";

package message;

service VerifyService {
	rpc GetVerifyCode (GetVerifyReq) returns (GetVerifyRsp) {}
}

message GetVerifyReq {
	string email = 1;
}

message GetVerifyRsp {
	int32 error = 1;
	string email = 2;
	string code = 3;
}


service StatusService {
	rpc GetChatServer (GetChatServerReq) returns (GetChatServerRsp) {}
	rpc Login(LoginReq) returns(LoginRsp);
}

message GetChatServerReq {
	int32 uid = 1;
}

message GetChatServerRsp {
	int32 error = 1;
	string host = 2;
	string port = 3;
	string token = 4;
}

message LoginReq{
	int32 uid = 1;
	string token= 2;
}

message LoginRsp {
	int32 error = 1;
	int32 uid = 2;
	string token = 3;
}


/* desc是申请好友的描述，
 * 原本想做的是如果不填写默认调用用户的个人简介，在Mysql也是desc字段
 * 但是懒得做，如果默认不填写直接置空string
 */
message AddFriendReq {
	int32  applyuid = 1;
	string name = 2;
	string desc = 3;
	string icon = 4;
	string nick = 5;
	int32  sex = 6;
	int32  touid = 7;
}

message AddFriendRsp {
	int32 error = 1;
	int32 applyuid = 2;
	int32 touid = 3;
}

message SendChatMsgReq{
	int32 fromuid = 1;
	int32 touid = 2;
	string message = 3;
}

message SendChatMsgRsp{
	int32 error = 1;
	int32 fromuid = 2;
	int32 touid = 3;
}

message AuthFriendReq{
	int32  send_uid = 1;
	int32  recv_uid = 2;
	string recv_name = 3;
	string recv_icon = 4;
	string recv_nick = 5;
	int32  recv_sex = 6;
}

message AuthFriendRsp{
	int32 error = 1;
	int32 send_uid = 2;
	int32 recv_uid = 3;
}

/* 保留msgid的功能：
 * 将已读的未读消息id发送到对方服务器，
 * 实现已读未读消息识别动能
 */
message TextChatData{
	string msg_id = 1;
	string msg_content = 2;
}

message TextChatMsgReq {
	int32 send_uid = 1;
    int32 recv_uid = 2;
	repeated TextChatData textmsgs = 3;
}

message TextChatMsgRsp {
	int32 error = 1;
	int32 send_uid = 2;
	int32 recv_uid = 3; 
	repeated TextChatData textmsgs = 4;
}

service ChatService {
	rpc NotifyAddFriend(AddFriendReq) returns (AddFriendRsp) {}
	rpc SendChatMsg(SendChatMsgReq) returns (SendChatMsgRsp) {}
	rpc NotifyAuthFriend(AuthFriendReq) returns (AuthFriendRsp) {}
	rpc NotifyTextChatMsg(TextChatMsgReq) returns (TextChatMsgRsp){}
}

